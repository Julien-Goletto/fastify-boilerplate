generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model game {
  id                Int                 @id @default(autoincrement())
  name              String              @unique
  released_on       DateTime            @db.Timestamptz(6)
  background_image  String
  createdAt         DateTime            @default(now()) @db.Timestamptz(6)
  updatedAt         DateTime?           @db.Timestamptz(6)
  game_has_genre    game_has_genre[]
  game_has_platform game_has_platform[]
  review            review[]
}

model game_has_genre {
  id        Int       @default(autoincrement())
  game_id   Int
  genre_id  Int
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime? @db.Timestamptz(6)
  game      game      @relation(fields: [game_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  genre     genre     @relation(fields: [genre_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([game_id, genre_id])
}

model game_has_platform {
  id          Int       @default(autoincrement())
  game_id     Int
  platform_id Int
  createdAt   DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime? @db.Timestamptz(6)
  game        game      @relation(fields: [game_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  platform    platform  @relation(fields: [platform_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([game_id, platform_id])
}

model genre {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  createdAt      DateTime         @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime?        @db.Timestamptz(6)
  game_has_genre game_has_genre[]
}

model platform {
  id                Int                 @id @default(autoincrement())
  name              String              @unique
  createdAt         DateTime            @default(now()) @db.Timestamptz(6)
  updatedAt         DateTime?           @db.Timestamptz(6)
  game_has_platform game_has_platform[]
}

model review {
  id             Int       @default(autoincrement())
  user_id        Int
  game_id        Int
  is_finished    Boolean   @default(false)
  is_prioritized Boolean   @default(false)
  score          Int?
  createdAt      DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime? @db.Timestamptz(6)
  game           game      @relation(fields: [game_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user           user      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([game_id, user_id])
}

model user {
  id        Int       @id @default(autoincrement())
  pseudo    String    @unique
  is_admin  Boolean?  @default(false)
  password  String
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime? @db.Timestamptz(6)
  review    review[]
}
